name: learn-github-actions
on: 
  push:
    branches:
      - 'main'
      - 'test'
jobs:
  setup-macos-build-environment:
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v3
      # Determine xcode version
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '11.2.1'
      - uses: actions/setup-python@v3
        with:
          python-version: '3.9'
          cache: 'pip'
      
      - run: mkdir ~/dev/

      # Potrace library
      - name: Restore Potrace cache
        uses: actions/cache@v3
        id: cache-potrace
        with:
          path: |
            ~/dev/potrace-1.16
            /usr/local/lib/libpotrace.a
            /usr/local/lib/libpotrace.dylib
            /usr/local/lib/libpotrace.la
          key: potrace

      - run: |
          cd ~/dev/
          curl http://potrace.sourceforge.net/download/1.16/potrace-1.16.tar.gz -o potrace-1.16.tar.gz
          tar -xvf potrace-1.16.tar.gz
          cd potrace-1.16
          ./configure --with-libpotrace
          make install
      #- run: brew install opencv
      - run: brew install pkg-config
      - run: brew install ceres-solver
      - run: brew install eigen
      - run: brew install ffmpeg@4
      - run: brew install glog
      - run: brew install harfbuzz
      - run: brew install numpy
      - run: brew install protobuf
      - run: brew install tbb
      - run: brew install vtk
      - run: |
          cd ~/dev/
          ln -s /usr/local/Cellar/gcc/11.3.0/bin/gfortran /usr/local/bin/gfortran
          git clone https://github.com/xianyi/OpenBLAS.git
          cd OpenBLAS
          make -j4
          sudo make install
      - run: |
          cd ~/dev/
          mkdir opencv
          cd opencv
          git clone https://github.com/opencv/opencv.git
          git clone https://github.com/opencv/opencv_contrib.git
          mkdir build_opencv
          cd build_opencv
          opencv_cmake_args="-DCMAKE_OSX_DEPLOYMENT_TARGET= -DBUILD_JASPER=OFF -DBUILD_JPEG=OFF -DBUILD_OPENEXR=OFF -DBUILD_PERF_TESTS=OFF -DBUILD_PNG=OFF -DBUILD_PROTOBUF=OFF -DBUILD_TESTS=OFF -DBUILD_TIFF=OFF -DBUILD_WEBP=OFF -DBUILD_ZLIB=OFF -DBUILD_opencv_hdf=OFF -DBUILD_opencv_java=OFF -DBUILD_opencv_text=ON -DOPENCV_ENABLE_NONFREE=ON -DOPENCV_GENERATE_PKGCONFIG=ON -DPROTOBUF_UPDATE_FILES=ON -DWITH_1394=OFF -DWITH_CUDA=OFF -DWITH_EIGEN=ON -DWITH_FFMPEG=ON -DWITH_GPHOTO2=OFF -DWITH_GSTREAMER=OFF -DWITH_JASPER=OFF -DWITH_OPENEXR=ON -DWITH_OPENGL=OFF -DWITH_QT=OFF -DWITH_TBB=ON -DWITH_VTK=ON -DBUILD_opencv_python2=OFF -DBUILD_opencv_python3=ON -DPYTHON3_EXECUTABLE=/usr/local/opt/python@3.9/bin/python3 -DENABLE_AVX=OFF -DENABLE_AVX2=OFF -DENABLE_SSE41=OFF -DENABLE_SSE42=OFF"
          echo ${opencv_cmake_args}
          cmake ${opencv_cmake_args} -DOPENCV_EXTRA_MODULES_PATH=~/dev/opencv/opencv_contrib/modules ~/dev/opencv/opencv
          make
          make install
      #- uses: jurplel/install-qt-action@v2.14.0
      #  with:
      #    dir: ~/dev/ # optional
      #    version: 6.2.4 # optional, default is 5.15.2
      #    host: mac # optional
      #    target: desktop # optional, default is desktop
      - name: Install Qt 6.2.4
        run: |
          brew install p7zip
          python3 -m pip install setuptools wheel
          python3 -m pip install py7zr==0.16.1
          python3 -m pip install aqtinstall==2.1.0
          python3 -m aqt install-qt  mac desktop 6.2.4 -m qtserialport qtwebsockets debug_info -O ${{ github.workspace }}/Qt

      - run: brew install libxml2
      - run: |
          mkdir build
          cd build
          $RUNNER_WORKSPACE/Qt/6.2.4/macos/bin/qmake6 ${{ github.workspace }}/test/test.pro -spec macx-clang CONFIG+=qtquickcompiler
      - run: |
          cd build
          make qmake_all
          make -j10
      - run: |
          cd build
          $RUNNER_WORKSPACE/Qt/6.2.4/macos/bin/macdeployqt TestQt.app -dmg --verbose=2
          tree .
      - name: Release
        uses: softprops/action-gh-release@v1
        #if: startsWith(github.ref, 'refs/tags/')
        with:
          files: build/TestQt.dmg
